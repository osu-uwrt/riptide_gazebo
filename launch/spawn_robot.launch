<!-- Spawns Puddles vehicle in the simulation -->
<launch>
  <arg name="robot" default="puddles" doc="Name of the vehicle to spawn"/>
  <arg name="debug" default="0" doc="Starts the Gazebo plugins in debug mode for more verbose output"/>
  <arg name="x" default="0" doc="X coordinate of the vehicle's initial position (in ENU)"/>
  <arg name="y" default="0" doc="Y coordinate of the vehicle's initial position (in ENU)"/>    
  <arg name="z" default="0" doc="Z coordinate of the vehicle's initial position (in ENU)"/>
  <arg name="roll" default="0.0" doc="Roll angle of the vehicle's initial orientation"/>
  <arg name="pitch" default="0.0" doc="Pitch angle of the vehicle's initial orientation"/>
  <arg name="yaw" default="0.0" doc="Yaw angle of the vehicle's initial orientation"/>
  
  <group ns="$(arg robot)">
    <param name="robot_description"
            command="$(find xacro)/xacro '$(find riptide_descriptions)/robots/$(arg robot).xacro' --inorder
                    debug:=$(arg debug)
                    namespace:=$(arg robot)
                    inertial_reference_frame:=world" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="uuv_descriptions" type="spawn_model" respawn="false" output="screen"
          args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model $(arg robot) -param /$(arg robot)/robot_description"/>
  </group>

  <include file="$(find riptide_gazebo)/launch/sensor_remap.launch">
    <arg name="robot" value="$(arg robot)" />
  </include>

</launch>
